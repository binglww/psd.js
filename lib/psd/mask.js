// Generated by CoffeeScript 1.12.7
;(function() {
  var Mask

  module.exports = Mask = (function() {
    function Mask(file) {
      this.file = file
      this.top = 0
      this.right = 0
      this.bottom = 0
      this.left = 0
    }

    Mask.prototype.parse = function() {
      var maskEnd
      this.size = this.file.readInt()
      if (this.size === 0) {
        return this
      }
      maskEnd = this.file.tell() + this.size
      this.top = this.file.readInt()
      this.left = this.file.readInt()
      this.bottom = this.file.readInt()
      this.right = this.file.readInt()
      this.width = this.right - this.left
      this.height = this.bottom - this.top

      this.defaultColor = this.file.readByte()
      this.flags = this.file.readByte()

      this.relative = (this.flags & 0x01) > 0
      this.disabled = (this.flags & (0x01 << 1)) > 0
      this.invert = (this.flags & (0x01 << 2)) > 0
      this.fromOtherData = (this.flags & (0x01 << 3)) > 0
      this.hasParameters = (this.flags & (0x01 << 4)) > 0
      if (this.hasParameters) {
        this.maskParameters = this.file.readByte()
        if ((this.maskParameters & 0x01) > 0) {
          this.userMaskDensity = this.file.readByte()
        }
        if ((this.maskParameters & (0x01 << 1)) > 0) {
          this.userMaskFeather = this.file.readDouble()
        }
        if ((this.maskParameters & (0x01 << 2)) > 0) {
          this.vectorMaskDensity = this.file.readByte()
        }
        if ((this.maskParameters & (0x01 << 3)) > 0) {
          this.vectorMaskFeather = this.file.readDouble()
        }
      }
      if (this.size === 20) {
        this.padding = this.file.readShort()
      } else {
        this.realFlag = this.file.readByte()
        this.realBgColor = this.file.readByte()
        this.enclosing = {
          top: this.file.readInt(),
          left: this.file.readInt(),
          bottom: this.file.readInt(),
          right: this.file.readInt()
        }
      }

      this.file.seek(maskEnd)
      return this
    }

    Mask.prototype['export'] = function() {
      if (this.size === 0) {
        return {}
      }
      return {
        top: this.top,
        left: this.left,
        bottom: this.bottom,
        right: this.right,
        width: this.width,
        height: this.height,
        defaultColor: this.defaultColor,
        relative: this.relative,
        disabled: this.disabled,
        invert: this.invert
      }
    }

    return Mask
  })()
}.call(this))
